// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p6
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "ddsC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/ORB_Core.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"

#if !defined (__ACE_INLINE__)
#include "ddsC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_ROSDDS_Msg[] =
      {
        { "reserved", &CORBA::_tc_octet },
        { "version", &CORBA::_tc_ULongSeq },
        { "callerId", &CORBA::_tc_string },
        { "message", &CORBA::_tc_OctetSeq }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_ROSDDS_Msg (
  ::CORBA::tk_struct,
  "IDL:ROSDDS/Msg:1.0",
  "Msg",
  _tao_fields_ROSDDS_Msg,
  4);


namespace ROSDDS
{
  ::CORBA::TypeCode_ptr const _tc_Msg =
    &_tao_tc_ROSDDS_Msg;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
ROSDDS::Msg::_tao_any_destructor (
    void *_tao_void_pointer)
{
  Msg *_tao_tmp_pointer =
    static_cast<Msg *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ROSDDS
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::ROSDDS::Msg &_tao_elem)
  {
    if (0 == &_tao_elem) // Trying to de-reference NULL object
      _tao_any <<= static_cast< ::ROSDDS::Msg *>( 0 ); // Use non-copying insertion of a NULL
    else
      TAO::Any_Dual_Impl_T< ::ROSDDS::Msg>::insert_copy (
          _tao_any,
          ::ROSDDS::Msg::_tao_any_destructor,
          ::ROSDDS::_tc_Msg,
          _tao_elem);
  }

  /// Non-copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any, ::
      ROSDDS::Msg *_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::ROSDDS::Msg>::insert (
        _tao_any,
        ::ROSDDS::Msg::_tao_any_destructor,
        ::ROSDDS::_tc_Msg,
        _tao_elem);
  }

  /// Extraction to non-const pointer (deprecated).
  ::CORBA::Boolean operator>>= (
      const ::CORBA::Any &_tao_any,
      ::ROSDDS::Msg *&_tao_elem)
  {
    return _tao_any >>= const_cast<
        const ::ROSDDS::Msg *&> (
        _tao_elem);
  }

  /// Extraction to const pointer.
  ::CORBA::Boolean operator>>= (
      const ::CORBA::Any &_tao_any,
      const ::ROSDDS::Msg *&_tao_elem)
  {
    return
      TAO::Any_Dual_Impl_T< ::ROSDDS::Msg>::extract (
          _tao_any,
          ::ROSDDS::Msg::_tao_any_destructor,
          ::ROSDDS::_tc_Msg,
          _tao_elem
        );
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const ROSDDS::Msg &_tao_elem)
{
  if (0 == &_tao_elem) // Trying to de-reference NULL object
    _tao_any <<= static_cast<ROSDDS::Msg *>( 0 ); // Use non-copying insertion of a NULL
  else
    TAO::Any_Dual_Impl_T<ROSDDS::Msg>::insert_copy (
      _tao_any,
      ROSDDS::Msg::_tao_any_destructor,
      ROSDDS::_tc_Msg,
      _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  ROSDDS::Msg *_tao_elem)
{
  TAO::Any_Dual_Impl_T<ROSDDS::Msg>::insert (
    _tao_any,
    ROSDDS::Msg::_tao_any_destructor,
    ROSDDS::_tc_Msg,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  ROSDDS::Msg *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ROSDDS::Msg *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const ROSDDS::Msg *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<ROSDDS::Msg>::extract (
      _tao_any,
      ROSDDS::Msg::_tao_any_destructor,
      ROSDDS::_tc_Msg,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ROSDDS::Msg &_tao_aggregate)
{
  return
    (strm << ::ACE_OutputCDR::from_octet (_tao_aggregate.reserved)) &&
    (strm << _tao_aggregate.version) &&
    (strm << _tao_aggregate.callerId.in ()) &&
    (strm << _tao_aggregate.message);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ROSDDS::Msg &_tao_aggregate)
{
  return
    (strm >> ::ACE_InputCDR::to_octet (_tao_aggregate.reserved)) &&
    (strm >> _tao_aggregate.version) &&
    (strm >> _tao_aggregate.callerId.out ()) &&
    (strm >> _tao_aggregate.message);
}

TAO_END_VERSIONED_NAMESPACE_DECL



